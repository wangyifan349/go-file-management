from flask import Flask,request,jsonify,send_from_directory,abort;import os;from werkzeug.utils import secure_filename;app=Flask(__name__);ROOT=os.path.join(os.path.dirname(__file__),'storage');os.makedirs(ROOT,exist_ok=True)
def R(p):p2=os.path.normpath(os.path.join(ROOT,p)); 
    (abort(400,'Invalid path') if not p2.startswith(os.path.abspath(ROOT)) else None);return p2
@app.route('/')
def I():return "<!DOCTYPE html><html lang='en'><head><meta charset='UTF-8'><title>File Manager</title><style>body{font-family:Arial;}#T ul{list-style:none;padding-left:20px}.folder{font-weight:bold}.drag-over{background:#def!important}.ctx{position:absolute;background:#fff;border:1px solid #ccc;display:none;z-index:999}.ctx li{padding:5px 10px;white-space:nowrap}.ctx li:hover{background:#eee}</style></head><body><h1>File Manager</h1><form id='F'><input type='file' name='file'><button>Upload</button></form><p>Current: <span id='P'>/</span></p><div id='T'></div><ul id='M' class='ctx'><li data-a='download'>Download</li><li data-a='delete'>Delete</li><li data-a='rename'>Rename</li></ul><script>let C='',Tgt=null;function Rf(p=''){C=p;document.getElementById('P').innerText='/'+p;fetch('/api/list?path='+encodeURIComponent(p)).then(r=>r.json()).then(d=>{let c=document.getElementById('T');c.innerHTML='';let u=document.createElement('ul');d.items.forEach(e=>{let li=document.createElement('li');li.innerText=e.name;li.dataset.n=e.name;li.dataset.d=e.isDirectory;li.className=e.isDirectory?'folder':'file';li.draggable=true;li.onclick=()=>{if(e.isDirectory){let np=C?C+'/'+e.name:e.name;Rf(np)}};li.addEventListener('dragstart',ev=>ev.dataTransfer.setData('text/plain',C?C+'/'+e.name:e.name));li.addEventListener('dragover',ev=>{if(e.isDirectory){ev.preventDefault();li.classList.add('drag-over')}});li.addEventListener('dragleave',()=>li.classList.remove('drag-over'));li.addEventListener('drop',ev=>{ev.preventDefault();li.classList.remove('drag-over');let s=ev.dataTransfer.getData('text/plain');let d=C?C+'/'+e.name:e.name;fetch('/api/move',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({sourcePath:s,destinationDirectory:d})}).then(()=>Rf(C))});li.oncontextmenu=ev=>{ev.preventDefault();Tgt=li;let m=document.getElementById('M');m.style.top=ev.pageY+'px';m.style.left=ev.pageX+'px';m.style.display='block'};u.appendChild(li)});c.appendChild(u)})}
document.getElementById('F').onsubmit=ev=>{ev.preventDefault();let f=document.querySelector('input[name=file]').files[0];if(!f)return;let fd=new FormData();fd.append('file',f);fd.append('path',C);fetch('/api/upload',{method:'POST',body:fd}).then(()=>Rf(C))};document.onclick=()=>document.getElementById('M').style.display='none';document.querySelectorAll('#M li').forEach(li=>li.onclick=()=>{let a=li.dataset.a,n=Tgt.dataset.n,d=Tgt.dataset.d=='true',p=C?C+'/'+n:n;if(a==='download'){if(!d)window.location='/api/download?path='+encodeURIComponent(p);else alert('Cannot download dir')}if(a==='delete'){if(confirm('Delete '+n+'?'))fetch('/api/delete',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({path:p})}).then(()=>Rf(C))}if(a==='rename'){let nn=prompt('New name',n);if(nn&&nn!==n)fetch('/api/rename',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({oldPath:p,newName:nn})}).then(()=>Rf(C))}document.getElementById('M').style.display='none'});Rf()
</script></body></html>"
@app.route('/api/list')
def L():p=request.args.get('path','');d=R(p);return jsonify(items=[{'name':n,'isDirectory':os.path.isdir(os.path.join(d,n))} for n in os.listdir(d)])
@app.route('/api/upload',methods=['POST'])
def U():p=request.form.get('path','');d=R(p);f=request.files.get('file'); 
    if not f:abort(400);fn=secure_filename(f.filename);f.save(os.path.join(d,fn));return jsonify(success=True)
@app.route('/api/delete',methods=['POST'])
def D():j=request.get_json();p=R(j.get('path',''));os.rmdir(p) if os.path.isdir(p) else os.remove(p);return jsonify(success=True)
@app.route('/api/rename',methods=['POST'])
def RN():j=request.get_json();o=R(j.get('oldPath',''));nd=secure_filename(j.get('newName',''));n=os.path.join(os.path.dirname(o),nd);os.rename(o,n);return jsonify(success=True)
@app.route('/api/move',methods=['POST'])
def Mv():j=request.get_json();s=R(j.get('sourcePath',''));t=R(j.get('destinationDirectory',''));ns=os.path.join(t,os.path.basename(s));os.rename(s,ns);return jsonify(success=True)
@app.route('/api/download')
def DL():p=request.args.get('path','');f=R(p); 
    return send_from_directory(os.path.dirname(f),os.path.basename(f),as_attachment=True) if os.path.isfile(f) else abort(404)
if __name__=='__main__':app.run(debug=True)
